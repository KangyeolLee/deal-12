{"version":3,"sources":["webpack://deal-12/./src/utils.ts","webpack://deal-12/./src/lib/router.ts","webpack://deal-12/./src/core/Component.ts","webpack://deal-12/./src/Components/Shared/IconButton/index.ts","webpack://deal-12/./src/Components/Shared/Header/index.ts","webpack://deal-12/./src/Components/Shared/ImgBox/index.ts","webpack://deal-12/./src/Components/Shared/CategoryListItem/index.ts","webpack://deal-12/./src/Components/CategoryResult/index.ts","webpack://deal-12/./src/Components/Category/index.ts","webpack://deal-12/./src/Components/Shared/Button/index.ts","webpack://deal-12/./src/Components/Shared/ChatListItem/index.ts","webpack://deal-12/./src/Components/Menu/index.ts","webpack://deal-12/./src/Components/Shared/TextInput/index.ts","webpack://deal-12/./src/Components/Auth/Login.ts","webpack://deal-12/./src/Components/Auth/index.ts","webpack://deal-12/./src/Components/Shared/Dropdown/index.ts","webpack://deal-12/./src/Components/Home/index.ts","webpack://deal-12/./src/Components/Shared/ProductBar/index.ts","webpack://deal-12/./src/Components/Shared/InfoSaler/index.ts","webpack://deal-12/./src/Components/Shared/Status/index.ts","webpack://deal-12/./src/Components/SalesProductDetail/index.ts","webpack://deal-12/./src/Components/Shared/InfoProduct/index.ts","webpack://deal-12/./src/Components/Shared/ChatBubble/index.ts","webpack://deal-12/./src/Components/Shared/ChatBar/index.ts","webpack://deal-12/./src/Components/Shared/InputPopup/indext.ts","webpack://deal-12/./src/Components/ChatDetail/index.ts","webpack://deal-12/./src/Components/Shared/ImgButton/index.ts","webpack://deal-12/./src/Components/Shared/LocationButton/index.ts","webpack://deal-12/./src/main.ts","webpack://deal-12/./src/Components/NewPost/index.ts","webpack://deal-12/./src/Components/ChatList/index.ts","webpack://deal-12/./src/Components/Auth/Register.ts","webpack://deal-12/./src/Components/Auth/Logout.ts","webpack://deal-12/./src/Components/Location/index.ts"],"names":["isClass","value","Boolean","toString","startsWith","Router","constructor","$app","routes","fallback","this","generateRoutes","initEvent","forEach","route","path","window","addEventListener","onHashChangeHandler","getRoute","Error","hasRoute","component","then","isPromise","res","default","innerHTML","location","hash","substr","redirect","push","middlewares","middleware","getComponent","HTMLElement","appendChild","$router","Component","$target","$props","setup","render","setEvent","mounted","template","setState","newState","$state","addEvent","eventType","selector","callback","children","querySelectorAll","event","target","includes","closest","IconButton","name","small","Header","headerType","title","extraIconName","$category","querySelector","$user","$menu","$loc","$left","ImgBox","imgType","img","CategoryListItem","isLiked","price","timestamp","chatNum","likeNum","replace","pageName","$img","$iconBtn","$chatIcon","style","width","height","$heartIcon","console","log","className","list","CategoryResult","category","$header","$itemList","item","$item","document","createElement","append","$backBtn","categories","id","CategoryBtn","handleCategory","Category","wrapper","$button","$result","Button","buttonType","isClicked","$addIcon","handleClick","ChatListItem","checked","username","content","$imageWrapper","$list","tapList","noData","sellList","likeList","chatList","Menu","menu","$tapBar","tap","btn","$wrapper","length","TextInput","placeholder","type","size","Login","$userLogin","$loginBtn","Auth","$authentication","Dropdown","offset","$dropdown","classList","add","position","lists","dropdownOpener","parentElement","isWarning","text","onclick","$li","innerText","e","stopPropagation","remove","toggleDropdown","ProductBar","InfoSaler","Status","readonly","$status","SalesProductDetail","image","users","$productDetail","$userSpecification","$moreBtn","InfoProduct","ChatBubble","userId","message","ChatBar","$sendBtn","$input","InputPopup","btnText","isAlert","$modal","$confirmBtn","dummyChatBubblesData","roomId","ImgButton","btnType","imgNum","addImg","$imgBox","$fileInput","onchange","cnt","$delBtn","LocationButton","$location","handleClickOnAddBtn","$postNewBtn","$categoryModal","$menuModal","$userModal","$categoryBtn","$menuBtn","$userBtn","$locationBtn","parentNode","files","imgs","line","$imgList","reader","FileReader","targetFile","onloadend","result","readAsDataURL","url","idx","history","back","$title","$content","$checkIcon","split","filter","_","i","Number","$chatList","chatData","chat","$chatBubbles","$chatbar","$productInfo","$chatItem","$rightBtn","$userEmail","$userLocation","$registerBtn","disabled","isActivated","every","input","$logoutBtn","$buttonArea","locations","slice","$addLocation","loc","async","options","router","initRouter","init"],"mappings":"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","file":"main.js","sourcesContent":["import { ClassElement } from 'typescript';\r\n\r\nexport function isPromise(value: Promise<Function>) {\r\n  return Boolean(value && typeof value.then === 'function');\r\n}\r\n\r\nexport function isFunction(value: Function) {\r\n  return Boolean(value && typeof value === 'function');\r\n}\r\n\r\nexport function isClass(value: ClassElement) {\r\n  return Boolean(value && value.toString().startsWith('class '));\r\n}\r\n","import { isClass, isFunction, isPromise } from '../utils';\r\n\r\ntype RouterType = {\r\n  $app: any;\r\n  routes: Route[];\r\n  fallback?: string;\r\n};\r\ntype Route = {\r\n  path: string;\r\n  redirect?: string;\r\n  component?: any;\r\n  middlewares?: any;\r\n};\r\n\r\nclass Router {\r\n  $app: HTMLDivElement;\r\n  routes: {\r\n    [key: string]: Route;\r\n  } = {};\r\n  fallback: string = '/';\r\n\r\n  constructor({ $app, routes, fallback = '/' }: RouterType) {\r\n    this.$app = $app;\r\n    this.fallback = fallback;\r\n\r\n    this.generateRoutes(routes);\r\n\r\n    this.initEvent();\r\n  }\r\n\r\n  generateRoutes(routes: Route[]) {\r\n    routes.forEach((route: Route) => {\r\n      this.routes[route.path] = route;\r\n    });\r\n  }\r\n\r\n  initEvent() {\r\n    window.addEventListener('hashchange', () => this.onHashChangeHandler());\r\n  }\r\n\r\n  getRoute(path: string) {\r\n    const route: Route = this.routes[path];\r\n    if (!route) throw new Error(`Not found route: ${path}`);\r\n    return route;\r\n  }\r\n\r\n  hasRoute(path: string) {\r\n    return typeof this.routes[path] !== 'undefined';\r\n  }\r\n\r\n  async getComponent(route: Route) {\r\n    const component =\r\n      isFunction(route.component) && !isClass(route.component)\r\n        ? route.component()\r\n        : route.component;\r\n\r\n    if (isPromise(component)) {\r\n      const res = await component;\r\n      return res.default ? res.default : res;\r\n    } else {\r\n      return component;\r\n    }\r\n  }\r\n\r\n  async onHashChangeHandler() {\r\n    this.$app.innerHTML = '';\r\n\r\n    const hash = window.location.hash;\r\n    const path = hash.substr(1);\r\n\r\n    const route = this.hasRoute(path)\r\n      ? this.getRoute(path)\r\n      : this.getRoute(this.fallback);\r\n\r\n    if (route.redirect) {\r\n      this.push(route.redirect);\r\n      return;\r\n    }\r\n\r\n    if (route.middlewares) {\r\n      for (const middleware of route.middlewares) {\r\n        if (!(await middleware())) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const component = await this.getComponent(route);\r\n    if (typeof component === 'string') {\r\n      this.$app.innerHTML = component;\r\n    } else if (component instanceof HTMLElement) {\r\n      this.$app?.appendChild(component);\r\n    } else if (isClass(component)) {\r\n      new component(this.$app);\r\n    } else {\r\n      throw new Error('invalid component');\r\n    }\r\n  }\r\n\r\n  push(path: string) {\r\n    window.location.hash = path;\r\n  }\r\n}\r\n\r\n/**\r\n * - push(path: string): void - navigate\r\n */\r\nexport let $router: {\r\n  push: (path: string) => void;\r\n};\r\n\r\n/**\r\n * @param {{$app: HTMLElement, routes: Route[], fallback?: string}} options\r\n */\r\nexport function initRouter(options: RouterType) {\r\n  // dropdown 영역 밖 클릭 시 드랍다운 제거 이벤트는 최상단 $app에서 관리\r\n  const { $app } = options;\r\n  $app.addEventListener('click', (e: MouseEvent) => {\r\n    const $dropdowns = $app.querySelectorAll('.dropdown');\r\n    $dropdowns.forEach(($dropdown: HTMLElement) => {\r\n      const isOpen = $dropdown.className.includes('open-dropdown');\r\n\r\n      if (isOpen) {\r\n        $dropdown.classList.remove('open-dropdown');\r\n      }\r\n    });\r\n  });\r\n\r\n  const router = new Router(options);\r\n\r\n  $router = {\r\n    push: (path) => router.push(path),\r\n  };\r\n\r\n  router.onHashChangeHandler();\r\n}\r\n","export default class Component {\r\n  $target: Element;\r\n  $props?: any;\r\n  $state: any;\r\n  constructor($target: Element, $props?: any) {\r\n    this.$target = $target;\r\n    this.$props = $props;\r\n    this.setup();\r\n    this.render();\r\n    this.setEvent();\r\n  }\r\n  setup() {}\r\n  mounted() {}\r\n  template() {\r\n    return '';\r\n  }\r\n  render() {\r\n    const template = this.template();\r\n    if (template) {\r\n      this.$target.innerHTML = template;\r\n    }\r\n    this.mounted();\r\n  }\r\n  setEvent() {}\r\n  setState(newState: any) {\r\n    this.$state = { ...this.$state, ...newState };\r\n    this.render();\r\n  }\r\n  addEvent(eventType: string, selector: string, callback: Function) {\r\n    const children: Element[] = [...this.$target.querySelectorAll(selector)];\r\n    const isTarget = (target: Element) =>\r\n      children.includes(target) || target.closest(selector);\r\n    this.$target.addEventListener(eventType, (event: any) => {\r\n      if (!isTarget(event.target)) return false;\r\n      callback(event);\r\n    });\r\n  }\r\n}\r\n","import Component from '../../../core/Component';\r\nimport './styles.scss';\r\n\r\ninterface IconButtonProps {\r\n  name: string;\r\n  small?: boolean;\r\n}\r\n\r\nexport default class IconButton extends Component {\r\n  template() {\r\n    const { name, small }: IconButtonProps = this.$props;\r\n\r\n    return `<div class=\"${\r\n      small ? 'icon-btn small' : 'icon-btn'\r\n    }\" style=\"background-image: url(../../../../assets/${name}.svg)\"></div>`;\r\n  }\r\n}\r\n","import Component from '../../../core/Component';\r\nimport IconButton from '../IconButton';\r\nimport './styles.scss';\r\n\r\ntype HeaderType = 'main' | 'menu-white' | 'menu-off-white' | 'menu-invisible';\r\ninterface HeaderProps {\r\n  headerType: HeaderType;\r\n  title?: string;\r\n  extraIconName?: string;\r\n}\r\n\r\nexport default class Header extends Component {\r\n  template() {\r\n    const { headerType, title }: HeaderProps = this.$props;\r\n\r\n    switch (headerType) {\r\n      case 'main':\r\n        return `\r\n        <div class=\"header main\">\r\n            <div class=\"header__left-icon\" id=\"category\"></div>\r\n            <div class=\"location\">\r\n              <div id=\"loc\" style=\"width: 1.6rem; height: 1.6rem; overflow: hidden; margin-right: 0.4rem;\"></div>\r\n              <div>${title}</div>\r\n            </div>\r\n            <div class=\"header__right-icon\" style=\"display: flex;\">\r\n                <div id=\"user\" style=\"margin-right: 1.6rem\"></div>\r\n                <div id=\"menu\"></div>\r\n            </div>\r\n        </div>`;\r\n\r\n      case 'menu-white':\r\n        return `\r\n        <div class=\"header menu-white\">\r\n            <div class=\"header__left-icon\" id=\"left\"></div>\r\n            <div>${title}</div>\r\n            <div class=\"header__right-icon\" id=\"right\"></div>\r\n        </div>`;\r\n\r\n      case 'menu-off-white':\r\n        return `\r\n        <div class=\"header menu-off-white\">\r\n            <div class=\"header__left-icon\" id=\"left\"></div>\r\n            <div>${title}</div>\r\n        </div>`;\r\n\r\n      case 'menu-invisible':\r\n        return `\r\n        <div class=\"header menu-invisible\">\r\n            <div class=\"header__left-icon\" id=\"left\"></div>\r\n            <div class=\"header__right-icon\" id=\"right\"></div>\r\n        </div>`;\r\n\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  mounted() {\r\n    const { headerType, extraIconName }: HeaderProps = this.$props;\r\n\r\n    switch (headerType) {\r\n      case 'main':\r\n        const $category = this.$target.querySelector('#category');\r\n        new IconButton($category as Element, {\r\n          name: 'category',\r\n        });\r\n        const $user = this.$target.querySelector('#user');\r\n        new IconButton($user as Element, {\r\n          name: 'user',\r\n        });\r\n        const $menu = this.$target.querySelector('#menu');\r\n        new IconButton($menu as Element, {\r\n          name: 'menu',\r\n        });\r\n        const $loc = this.$target.querySelector('#loc');\r\n        new IconButton($loc as Element, {\r\n          name: 'pinmap-white',\r\n        });\r\n        break;\r\n\r\n      case 'menu-white':\r\n        new IconButton(this.$target.querySelector('#left') as Element, {\r\n          name: 'left',\r\n        });\r\n        new IconButton(this.$target.querySelector('#right') as Element, {\r\n          name: extraIconName,\r\n        });\r\n        break;\r\n\r\n      case 'menu-off-white':\r\n        const $left = this.$target.querySelector('#left');\r\n        new IconButton($left as Element, {\r\n          name: 'left',\r\n        });\r\n        break;\r\n\r\n      case 'menu-invisible':\r\n        new IconButton(this.$target.querySelector('#left') as Element, {\r\n          name: 'left-white',\r\n        });\r\n\r\n        new IconButton(this.$target.querySelector('#right') as Element, {\r\n          name: 'more-white',\r\n        });\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import Component from '../../../core/Component';\r\nimport './styles.scss';\r\n\r\ntype ImgType = 'small' | 'medium' | 'large' | 'gradient';\r\ninterface ImgBoxProps {\r\n  imgType: ImgType;\r\n  img?: string;\r\n}\r\n\r\nexport default class ImgBox extends Component {\r\n  template() {\r\n    const { imgType, img }: ImgBoxProps = this.$props;\r\n\r\n    return `<div style=\"background-image: url('${img}')\" class=\"imgbox-${imgType}\"></div>`;\r\n  }\r\n}\r\n","import { $router } from '../../../lib/router';\r\nimport Component from '../../../core/Component';\r\nimport IconButton from '../IconButton';\r\nimport ImgBox from '../ImgBox';\r\nimport './styles.scss';\r\n\r\nexport interface CategoryListItemProps {\r\n  title: string;\r\n  img: string;\r\n  price: number;\r\n  location: string;\r\n  timestamp: string;\r\n  chatNum: number;\r\n  likeNum: number;\r\n  pageName: string;\r\n}\r\n\r\nexport default class CategoryListItem extends Component {\r\n  setup() {\r\n    this.$state = {\r\n      isLiked: false, // getLikes 해서 현재 postId와 비교\r\n    };\r\n  }\r\n  template() {\r\n    const {\r\n      title,\r\n      price,\r\n      location,\r\n      timestamp,\r\n      chatNum,\r\n      likeNum,\r\n    }: CategoryListItemProps = this.$props;\r\n\r\n    return `\r\n    <div class=\"item-box\">\r\n        <div id=\"img-box\"></div>\r\n        <div id=\"icon-btn\"></div>\r\n        <div class=\"info\">\r\n            <div>\r\n                <div class=\"info__title\">${title}</div>\r\n                <div class=\"info__location\">${location} ∙ ${timestamp}</div>\r\n                <div class=\"info__price\">${price\r\n                  .toString()\r\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</div>\r\n            </div>\r\n            <div class=\"info__counts\">\r\n                ${\r\n                  chatNum !== 0 &&\r\n                  `<div class=\"info__counts--count\">\r\n                      <div id=\"chat-icon\"></div>\r\n                      <div>${chatNum}</div>\r\n                  </div>`\r\n                }\r\n                ${\r\n                  likeNum !== 0 &&\r\n                  `<div class=\"info__counts--count\">\r\n                      <div id=\"heart-icon\"></div>\r\n                      <div>${likeNum}</div>\r\n                  </div>`\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"line\"></div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { pageName, img } = this.$props;\r\n    const { isLiked } = this.$state;\r\n\r\n    const $img = this.$target.querySelector('#img-box');\r\n    new ImgBox($img as Element, {\r\n      imgType: 'large',\r\n      img: img,\r\n    });\r\n\r\n    const $iconBtn = this.$target.querySelector('#icon-btn');\r\n    let name = '';\r\n    if (pageName === 'menu') {\r\n      name = 'more';\r\n    } else {\r\n      if (isLiked) name = 'heart-fill';\r\n      else name = 'heart';\r\n    }\r\n    new IconButton($iconBtn as Element, {\r\n      name,\r\n    });\r\n\r\n    // icons\r\n    const $chatIcon = this.$target.querySelector('#chat-icon') as HTMLElement;\r\n    $chatIcon.style.width = '1.6rem';\r\n    $chatIcon.style.height = '1.6rem';\r\n    const $heartIcon = this.$target.querySelector('#heart-icon');\r\n    new IconButton($chatIcon as Element, {\r\n      name: 'chat-small',\r\n      small: true,\r\n    });\r\n    new IconButton($heartIcon as Element, {\r\n      name: 'heart-small',\r\n      small: true,\r\n    });\r\n  }\r\n\r\n  setEvent() {\r\n    this.addEvent(\r\n      'click',\r\n      '.item-box',\r\n      ({ target }: { target: HTMLElement }) => {\r\n        console.log(target.className);\r\n        if (target.className === 'icon-btn') {\r\n          this.setState({ isLiked: !this.$state.isLiked });\r\n        } else {\r\n          $router.push('/post/:id');\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import Component from '../../core/Component';\r\nimport CategoryListItem, {\r\n  CategoryListItemProps,\r\n} from '../Shared/CategoryListItem';\r\nimport Header from '../Shared/Header';\r\n\r\nconst list: CategoryListItemProps[] = [];\r\n[0, 0, 0, 0, 0, 0, 0, 0, 0].forEach(() => {\r\n  list.push({\r\n    title: '우아한 옷 팔아요',\r\n    img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n    price: 69000,\r\n    location: '역삼동',\r\n    timestamp: '3시간 전',\r\n    chatNum: 1,\r\n    likeNum: 1,\r\n    pageName: 'home',\r\n  });\r\n});\r\n\r\nexport default class CategoryResult extends Component {\r\n  template() {\r\n    return `\r\n    <header></header>\r\n    <div class=\"item-list\" id=\"result-item-list\"></div>\r\n    `;\r\n  }\r\n  mounted() {\r\n    const { category }: { category: string } = this.$props;\r\n\r\n    const $header = this.$target.querySelector('header');\r\n    new Header($header as Element, {\r\n      title: category,\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    const $itemList = this.$target.querySelector('#result-item-list');\r\n    list.forEach((item) => {\r\n      const $item = document.createElement('div');\r\n      $itemList?.append($item);\r\n      new CategoryListItem($item as Element, item);\r\n    });\r\n\r\n    const $backBtn = this.$target.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => {\r\n      this.$target.className = 'modal-close';\r\n    });\r\n  }\r\n}\r\n","import Component from '../../core/Component';\r\nimport Header from '../Shared/Header';\r\nimport './styles.scss';\r\nimport CategoryResult from '../CategoryResult';\r\n\r\nconst categories = [\r\n  { id: 1, name: '디지털기기' },\r\n  { id: 2, name: '생활/가전' },\r\n  { id: 3, name: '가구/인테리어' },\r\n  { id: 4, name: '게임/취미' },\r\n  { id: 5, name: '생활/가공식품' },\r\n  { id: 6, name: '스포츠/레저' },\r\n  { id: 7, name: '여성패션/잡화' },\r\n  { id: 8, name: '남성패션/잡화' },\r\n  { id: 9, name: '유아동' },\r\n  { id: 10, name: '뷰티/미용' },\r\n  { id: 11, name: '반려동물' },\r\n  { id: 12, name: '도서/티켓/음반' },\r\n  { id: 13, name: '식물' },\r\n  { id: 14, name: '기타 중고물품' },\r\n];\r\n\r\ninterface CategoryBtnProps {\r\n  id: number;\r\n  name: string;\r\n  handleCategory: Function;\r\n}\r\n\r\nclass CategoryBtn extends Component {\r\n  template() {\r\n    const { name }: CategoryBtnProps = this.$props;\r\n\r\n    return `<div class=\"category-btn\"><div class=\"box\"></div><div class=\"name\">${name}</div></div>`;\r\n  }\r\n  setEvent() {\r\n    const { name, handleCategory } = this.$props;\r\n\r\n    this.addEvent('click', '.category-btn', () => {\r\n      handleCategory(name);\r\n    });\r\n  }\r\n}\r\n\r\nexport default class Category extends Component {\r\n  setup() {\r\n    this.$state = {\r\n      category: '전체',\r\n    };\r\n  }\r\n  template() {\r\n    return `\r\n    <header></header>\r\n    <div class=\"category-wrapper\"></div>\r\n    <div id=\"category-result-modal\" class=\"modal-close\"></div>\r\n    `;\r\n  }\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    new Header($header as Element, {\r\n      title: '카테고리',\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    const wrapper = this.$target.querySelector('.category-wrapper');\r\n    categories.forEach((category) => {\r\n      const $button = document.createElement('div');\r\n      new CategoryBtn($button as Element, {\r\n        id: category.id,\r\n        name: category.name,\r\n        handleCategory: (category: string) => {\r\n          this.setState({ category: category });\r\n          (\r\n            this.$target.querySelector('#category-result-modal') as HTMLElement\r\n          ).className = 'modal-open';\r\n        },\r\n      });\r\n      wrapper?.append($button);\r\n    });\r\n\r\n    const $result = this.$target.querySelector('#category-result-modal');\r\n    new CategoryResult($result as Element, {\r\n      category: this.$state.category,\r\n    });\r\n\r\n    const $backBtn = this.$target.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => {\r\n      this.$target.className = 'modal-close';\r\n    });\r\n  }\r\n}\r\n","import Component from '../../../core/Component';\r\nimport IconButton from '../../Shared/IconButton';\r\nimport './styles.scss';\r\n\r\ntype ButtonType = 'medium' | 'large' | 'fab' | 'tap';\r\ninterface HeaderProps {\r\n  buttonType: ButtonType;\r\n  title?: string;\r\n  isClicked?: boolean;\r\n  handleClick: Function;\r\n}\r\n\r\nexport default class Button extends Component {\r\n  template() {\r\n    const { buttonType, title, isClicked }: HeaderProps = this.$props;\r\n\r\n    return `\r\n    <button id=\"button\" class=\"${buttonType} ${isClicked ? 'active' : ''}\">\r\n        ${title ? title : ''}\r\n    </button>`;\r\n  }\r\n\r\n  mounted() {\r\n    const { title }: HeaderProps = this.$props;\r\n    if (!title) {\r\n      const $addIcon = document.createElement('div');\r\n      new IconButton($addIcon as Element, {\r\n        name: 'add-white',\r\n      });\r\n      this.$target.querySelector('#button')?.append($addIcon);\r\n    }\r\n  }\r\n\r\n  setEvent() {\r\n    const { handleClick }: HeaderProps = this.$props;\r\n    this.$target.querySelector('#button')?.addEventListener('click', () => {\r\n      handleClick();\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\n\r\nimport Component from '../../../core/Component';\r\nimport ImgBox from './../ImgBox/index';\r\nimport { $router } from '../../../lib/router';\r\n\r\ninterface ParamsType {\r\n  username: string;\r\n  timestamp: string;\r\n  content: string;\r\n  img: string;\r\n  checked?: boolean;\r\n}\r\n\r\nexport default class ChatListItem extends Component {\r\n  template() {\r\n    const { checked, username, content, timestamp, img }: ParamsType =\r\n      this.$props;\r\n\r\n    return `\r\n    <div class=\"chat-list__item ${checked ? 'checked' : ''}\">\r\n      <div class=\"user-section\">\r\n        <div class=\"user-section__detail\">\r\n          <h6 class=\"username\">${username}</h6>\r\n          <p class=\"content\">${content}</p>\r\n        </div>\r\n        <span class=\"timestamp\">${timestamp}</span>\r\n      </div>\r\n      <div class=\"image-wrapper\"></div>\r\n    </div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { img } = this.$props;\r\n    const $imageWrapper = this.$target.querySelector('.image-wrapper');\r\n    const $list = this.$target.querySelector('.chat-list__item');\r\n\r\n    new ImgBox($imageWrapper as HTMLElement, {\r\n      imgType: 'small',\r\n      img,\r\n    });\r\n\r\n    $list?.addEventListener('click', () => $router.push('/chat/:id'));\r\n  }\r\n}\r\n","import Component from '../../core/Component';\r\nimport Header from '../Shared/Header';\r\nimport Button from '../Shared/Button';\r\nimport './styles.scss';\r\nimport CategoryListItem, {\r\n  CategoryListItemProps,\r\n} from '../Shared/CategoryListItem';\r\nimport ChatListItem from '../Shared/ChatListItem';\r\n\r\nconst tapList = [\r\n  { id: 'sell-list', title: '판매목록' },\r\n  { id: 'chat-list', title: '채팅' },\r\n  { id: 'like-list', title: '관심목록' },\r\n];\r\n\r\nconst noData = [\r\n  '등록한 상품이 없습니다.',\r\n  '채팅 기록이 없습니다.',\r\n  '관심을 표시한 상품이 없습니다.',\r\n];\r\n\r\nconst sellList: CategoryListItemProps[] = [];\r\n[0, 0, 0, 0, 0, 0, 0, 0, 0].forEach(() => {\r\n  sellList.push({\r\n    title: '우아한 옷 팔아요',\r\n    img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n    price: 69000,\r\n    location: '역삼동',\r\n    timestamp: '3시간 전',\r\n    chatNum: 1,\r\n    likeNum: 1,\r\n    pageName: 'home',\r\n  });\r\n});\r\nconst likeList: CategoryListItemProps[] = [];\r\n[0, 0].forEach(() => {\r\n  likeList.push({\r\n    title: '우아한 옷 팔아요',\r\n    img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n    price: 69000,\r\n    location: '역삼동',\r\n    timestamp: '3시간 전',\r\n    chatNum: 1,\r\n    likeNum: 1,\r\n    pageName: 'home',\r\n  });\r\n});\r\nconst chatList = [\r\n  {\r\n    username: 'UserE',\r\n    timestamp: '1분 전',\r\n    content: '실제로 신어볼 수 있는 건가요?',\r\n    img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n    checked: true,\r\n  },\r\n  {\r\n    username: 'UserD',\r\n    timestamp: '1시간 전',\r\n    content: '감사합니다 :)',\r\n    img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n    checked: false,\r\n  },\r\n];\r\nexport default class Menu extends Component {\r\n  setup() {\r\n    this.$state = { menu: 'sell-list' };\r\n  }\r\n\r\n  template() {\r\n    return `\r\n    <header></header>\r\n    <div id=\"tap-bar\"></div>\r\n    <div class=\"menu-wrapper\"></div>\r\n    `;\r\n  }\r\n  mounted() {\r\n    const { menu } = this.$state;\r\n\r\n    const $header = this.$target.querySelector('header');\r\n    new Header($header as Element, {\r\n      title: '메뉴',\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    const $tapBar = this.$target.querySelector('#tap-bar');\r\n    tapList.forEach((tap) => {\r\n      const btn = document.createElement('div');\r\n      btn.id = tap.id;\r\n      new Button(btn as Element, {\r\n        buttonType: 'tap',\r\n        title: tap.title,\r\n        isClicked: this.$state.menu === btn.id,\r\n        handleClick: () => {\r\n          if (menu !== tap.id) this.setState({ menu: tap.id });\r\n        },\r\n      });\r\n      $tapBar?.append(btn);\r\n    });\r\n\r\n    const $wrapper =\r\n      this.$target.querySelector('.menu-wrapper') ||\r\n      document.createElement('div');\r\n    switch (menu) {\r\n      case 'sell-list':\r\n        if (sellList.length > 0) {\r\n          sellList.forEach((item) => {\r\n            const $item = document.createElement('div');\r\n            $wrapper?.append($item);\r\n            new CategoryListItem($item as Element, item);\r\n          });\r\n        } else {\r\n          $wrapper.innerHTML = noData[0];\r\n          $wrapper.className = 'no-data';\r\n        }\r\n        break;\r\n\r\n      case 'chat-list':\r\n        if (chatList.length > 0) {\r\n          chatList.forEach((item) => {\r\n            const $item = document.createElement('div');\r\n            $wrapper?.append($item);\r\n            new ChatListItem($item as Element, item);\r\n          });\r\n        } else {\r\n          $wrapper.innerHTML = noData[1];\r\n          $wrapper.className = 'no-data';\r\n        }\r\n        break;\r\n\r\n      case 'like-list':\r\n        if (likeList.length > 0) {\r\n          likeList.forEach((item) => {\r\n            const $item = document.createElement('div');\r\n            $wrapper?.append($item);\r\n            new CategoryListItem($item as Element, item);\r\n          });\r\n        } else {\r\n          $wrapper.innerHTML = noData[2];\r\n          $wrapper.className = 'no-data';\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  setEvent() {\r\n    this.addEvent('click', '#left', () => {\r\n      this.$target.className = 'modal-close';\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\n\r\ninterface PropsType {\r\n  placeholder: string;\r\n  type: string;\r\n  size: string;\r\n  id?: string;\r\n}\r\n\r\nexport default class TextInput extends Component {\r\n  template() {\r\n    const { placeholder, type, size, id }: PropsType = this.$props;\r\n\r\n    return `\r\n      <input id=\"${\r\n        id ? id : ''\r\n      }\" class=\"text-input size-${size}\" placeholder=\"${placeholder}\" type=\"${type}\" />\r\n    `;\r\n  }\r\n}\r\n","import Component from '../../core/Component';\r\nimport TextInput from './../Shared/TextInput/index';\r\nimport Button from './../Shared/Button/index';\r\nimport { $router } from '../../lib/router';\r\n\r\nexport default class Login extends Component {\r\n  template() {\r\n    return `\r\n      <div class=\"user-email\"></div>\r\n      <div class=\"login-btn\"></div>\r\n      <span class=\"link-to-register\">회원가입</span>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $userLogin = this.$target.querySelector('.user-email');\r\n    const $loginBtn = this.$target.querySelector('.login-btn');\r\n\r\n    new TextInput($userLogin as HTMLElement, {\r\n      type: 'email',\r\n      placeholder: '아이디를 입력하세요.',\r\n      size: 'large',\r\n    });\r\n\r\n    new Button($loginBtn as HTMLElement, {\r\n      buttonType: 'large',\r\n      title: '로그인',\r\n      handleClick: () => console.log('로그인 폼 제출!'),\r\n    });\r\n  }\r\n\r\n  setEvent() {\r\n    this.addEvent('click', '.link-to-register', () =>\r\n      $router.push('/register')\r\n    );\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport Header from '../Shared/Header';\r\nimport Login from './Login';\r\n\r\nexport default class Auth extends Component {\r\n  setup() {}\r\n\r\n  template() {\r\n    return `\r\n      <header></header>\r\n      <form class=\"authentication\"></form>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    const $authentication = this.$target.querySelector('.authentication');\r\n\r\n    new Header($header as HTMLElement, {\r\n      title: '로그인',\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    new Login($authentication as HTMLElement);\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\n\r\ninterface DropdownListType {\r\n  isWarning?: boolean;\r\n  text: string;\r\n  onclick: Function;\r\n}\r\n\r\nexport default class Dropdown extends Component {\r\n  setup() {\r\n    const { offset } = this.$props;\r\n    const $dropdown = document.createElement('ul');\r\n    $dropdown.classList.add('dropdown', offset);\r\n    this.$target.append($dropdown);\r\n    this.$target.style.position = 'relative';\r\n  }\r\n\r\n  mounted() {\r\n    const { lists, offset } = this.$props;\r\n    const $dropdown = this.$target.querySelector('.dropdown') as HTMLElement;\r\n\r\n    const dropdownOpener = $dropdown?.parentElement;\r\n\r\n    // const dropdownItems = lists\r\n    //   .map((list: DropdownListType) => {\r\n    //     return `\r\n    //     <li class=\"dropdown-item ${list.isWarning ? 'warning' : ''}\">\r\n    //       ${list.text}\r\n    //     </li>\r\n    //   `;\r\n    //   })\r\n    //   .join('');\r\n    // $dropdown!.innerHTML = dropdownItems;\r\n\r\n    // template literal로 이벤트콜백 `<li onclick=${onclick}>...</li>` 를 넣는 방법이 있을까요오오?\r\n\r\n    lists.forEach((list: DropdownListType) => {\r\n      const { isWarning, text, onclick } = list;\r\n      const $li = document.createElement('li');\r\n      $li.classList.add('dropdown-item');\r\n      if (isWarning) $li.classList.add('warning');\r\n      $li.innerText = text;\r\n      $li.addEventListener('click', () => onclick());\r\n      $dropdown.append($li);\r\n    });\r\n\r\n    const toggleDropdown = (e: MouseEvent) => {\r\n      e.stopPropagation();\r\n      const isOpen = $dropdown.className.includes('open-dropdown');\r\n\r\n      if (isOpen) {\r\n        $dropdown.classList.remove('open-dropdown');\r\n      } else {\r\n        $dropdown.classList.add('open-dropdown');\r\n      }\r\n    };\r\n\r\n    this.$target?.classList.add(offset);\r\n    dropdownOpener?.addEventListener('click', (e) => toggleDropdown(e));\r\n  }\r\n\r\n  setEvent() {\r\n    const { onclick } = this.$props;\r\n\r\n    this.addEvent('click', 'li', onclick);\r\n  }\r\n}\r\n","import { $router } from '../../lib/router';\r\nimport Category from '../Category';\r\nimport Component from '../../core/Component';\r\nimport CategoryListItem, {\r\n  CategoryListItemProps,\r\n} from '../Shared/CategoryListItem';\r\nimport Header from '../Shared/Header';\r\nimport './styles.scss';\r\nimport Menu from '../Menu';\r\nimport Button from '../Shared/Button';\r\nimport Auth from './../Auth/index';\r\nimport Dropdown from './../Shared/Dropdown/index';\r\n\r\nconst list: CategoryListItemProps[] = [];\r\n[0, 0, 0, 0, 0, 0, 0, 0, 0].forEach(() => {\r\n  list.push({\r\n    title: '우아한 옷 팔아요',\r\n    img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n    price: 69000,\r\n    location: '역삼동',\r\n    timestamp: '3시간 전',\r\n    chatNum: 1,\r\n    likeNum: 1,\r\n    pageName: 'home',\r\n  });\r\n});\r\n\r\nexport default class Home extends Component {\r\n  template() {\r\n    return `\r\n    <header></header>\r\n    <div class=\"item-list\"></div>\r\n    <div id=\"menu-modal\" class=\"modal-close\"></div>\r\n    <div id=\"category-modal\" class=\"modal-close\"></div>\r\n    <div class=\"post-new-btn\"></div> \r\n    <div id=\"user-modal\" class=\"modal-close\"></div>\r\n    `;\r\n  }\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    new Header($header as Element, {\r\n      title: '역삼동',\r\n      headerType: 'main',\r\n    });\r\n\r\n    const $itemList = this.$target.querySelector('.item-list');\r\n    list.forEach((item) => {\r\n      const $item = document.createElement('div');\r\n      $itemList?.append($item);\r\n      new CategoryListItem($item as Element, item);\r\n    });\r\n\r\n    // post new btn\r\n    const $postNewBtn = this.$target.querySelector('.post-new-btn');\r\n    new Button($postNewBtn as Element, {\r\n      buttonType: 'fab',\r\n      handleClick: () => {\r\n        $router.push('/post/new');\r\n      },\r\n    });\r\n\r\n    // modals\r\n    const $categoryModal =\r\n      this.$target.querySelector('#category-modal') ||\r\n      document.createElement('div');\r\n    new Category($categoryModal as Element);\r\n\r\n    const $menuModal =\r\n      this.$target.querySelector('#menu-modal') ||\r\n      document.createElement('div');\r\n    new Menu($menuModal as Element);\r\n\r\n    const $userModal =\r\n      this.$target.querySelector('#user-modal') ||\r\n      document.createElement('div');\r\n    new Auth($userModal as Element);\r\n\r\n    // buttons\r\n    const $categoryBtn = this.$target.querySelector('#category');\r\n    $categoryBtn?.addEventListener('click', () => {\r\n      $categoryModal.className = 'modal-open';\r\n    });\r\n\r\n    const $menuBtn = this.$target.querySelector('#menu');\r\n    $menuBtn?.addEventListener('click', () => {\r\n      $menuModal.className = 'modal-open';\r\n    });\r\n\r\n    const $userBtn = this.$target.querySelector('#user');\r\n    $userBtn?.addEventListener('click', () => {\r\n      $userModal.className = 'modal-open';\r\n    });\r\n\r\n    const $locationBtn = this.$target.querySelector('.location');\r\n    new Dropdown($locationBtn as HTMLElement, {\r\n      lists: [\r\n        {\r\n          text: '역삼동',\r\n          isWarning: false,\r\n          onclick: () => console.log('역삼동 설정 완료!!'),\r\n        },\r\n        {\r\n          text: '내 동네 설정하기',\r\n          isWarning: false,\r\n          onclick: () => $router.push('/location'),\r\n        },\r\n      ],\r\n      offset: 'center',\r\n    });\r\n\r\n    const $backBtns = this.$target.querySelectorAll('#left');\r\n    $backBtns.forEach((btn) => {\r\n      btn.addEventListener('click', () => {\r\n        const modal = btn.parentNode?.parentNode?.parentNode as Element;\r\n        modal.className = 'modal-close';\r\n      });\r\n    });\r\n  }\r\n}\r\n","import Component from '../../../core/Component';\r\nimport './styles';\r\nimport IconButton from './../IconButton';\r\nimport Button from '../Button/index';\r\nimport { $router } from '../../../lib/router';\r\n\r\nexport default class ProductBar extends Component {\r\n  setup() {\r\n    this.$state = {\r\n      isLiked: false, // getLikes 해서 현재 postId와 비교\r\n    };\r\n  }\r\n\r\n  template() {\r\n    const { price } = this.$props;\r\n\r\n    return `\r\n      <div class=\"product-bar-details\">\r\n        <div class=\"image-wrapper\"></div>\r\n        <span class=\"product-price\">${price}</span>\r\n      </div>\r\n      <div class=\"button\"></div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { isLiked } = this.$state;\r\n    const $imageWrapper = this.$target.querySelector('.image-wrapper');\r\n    const $button = this.$target.querySelector('.button');\r\n\r\n    new IconButton($imageWrapper as HTMLElement, {\r\n      name: isLiked ? 'heart-fill' : 'heart',\r\n    });\r\n\r\n    new Button($button as HTMLElement, {\r\n      buttonType: 'medium',\r\n      title: '채팅 목록 보기',\r\n      handleClick: () => $router.push('/chat'),\r\n    });\r\n  }\r\n\r\n  setEvent() {\r\n    this.addEvent(\r\n      'click',\r\n      '.icon-btn',\r\n      ({ target }: { target: HTMLElement }) => {\r\n        if (target.className === 'icon-btn') {\r\n          this.setState({ isLiked: !this.$state.isLiked });\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\n\r\ninterface PropsType {\r\n  info: string;\r\n  name: string;\r\n  location: string;\r\n}\r\n\r\nexport default class InfoSaler extends Component {\r\n  template() {\r\n    const { name, location }: PropsType = this.$props;\r\n\r\n    return `\r\n      <p class=\"sub-title\">판매자 정보</p>\r\n      <div class=\"user-area\">\r\n        <p class=\"username\">${name}</p>\r\n        <p class=\"location\">${location}</p>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\nimport IconButton from './../IconButton';\r\nimport Dropdown from './../Dropdown/index';\r\n\r\ninterface PropsType {\r\n  text: string;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport default class Status extends Component {\r\n  template() {\r\n    const { text, readonly } = this.$props as PropsType;\r\n\r\n    return `\r\n        <span>${text}</span>\r\n        <div class=\"icon-button ${readonly ? 'hidden' : ''}\"></div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { readonly } = this.$props as PropsType;\r\n\r\n    const $status = this.$target.querySelector('.icon-button');\r\n    const $dropdown = this.$target;\r\n\r\n    if (readonly) {\r\n      return;\r\n    }\r\n\r\n    new IconButton($status as HTMLElement, {\r\n      name: 'down-xs',\r\n    });\r\n\r\n    new Dropdown($dropdown as HTMLElement, {\r\n      lists: [\r\n        {\r\n          text: '예약중으로 변경',\r\n          isWarning: false,\r\n          onclick: () => console.log('예약중'),\r\n        },\r\n        {\r\n          text: '판매완료로 변경',\r\n          isWarning: false,\r\n          onclick: () => console.log('판매완료'),\r\n        },\r\n      ],\r\n      offset: 'left',\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport Header from '../Shared/Header';\r\nimport ProductBar from './../Shared/ProductBar/index';\r\nimport InfoSaler from './../Shared/InfoSaler/index';\r\nimport Status from './../Shared/Status/index';\r\nimport { $router } from '../../lib/router';\r\nimport ImgBox from './../Shared/ImgBox/index';\r\nimport Dropdown from '../Shared/Dropdown';\r\n\r\nexport default class SalesProductDetail extends Component {\r\n  setup() {\r\n    // 추후 getProductById(id)와 같은 API를 통해 값을 가져오고\r\n    // 이를 this.$state 에 할당하는 것으로 변경\r\n\r\n    this.$state = {\r\n      title: '우아한 옷 팔아요',\r\n      image:\r\n        'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n      content: `이 옷 입으시면 우아한 사람이 될 수 있습니다. 몇 번 안 입어서 저는 우아한 사람이 되지 못한 것 같습니다. 네고 가능해요. 프리사이즈로 남녀노소 모두 입으실 수 있습니다. 연락주세용 제에바알\r\n        이 옷 입으시면 우아한 사람이 될 수 있습니다. 몇 번 안 입어서 저는 우아한 사람이 되지 못한 것 같습니다. 네고 가능해요. 프리사이즈로 남녀노소 모두 입으실 수 있습니다. 연락주세용 제에바알`,\r\n      price: '69,000원',\r\n      users: {\r\n        name: '우아해지고 싶은 사람',\r\n        location: '역삼동',\r\n      },\r\n    };\r\n  }\r\n\r\n  template() {\r\n    const { title, content } = this.$state;\r\n\r\n    return `\r\n      <div class=\"product-wrapper\">\r\n        <header></header>\r\n        <div class=\"product-detail\">\r\n          <div class=\"image-wrapper\"></div>\r\n          <div class=\"content\">\r\n            <div class=\"status-button\"></div>\r\n            <div class=\"product-description\">\r\n              <h1 class=\"product-title\">${title}</h1>\r\n              <p class=\"category\">기타 중고물품 · 3시간 전</p>\r\n              <p class=\"desc\">${content}</p>\r\n              <p class=\"more-info\"> 채팅 0 · 관심 0 · 조회 1 </p>\r\n            </div>\r\n            <div class=\"user-specification\"></div>\r\n          </div>\r\n          <div class=\"dropdown-area\"></div>\r\n        </div>\r\n        <div class=\"product-bar\"></div>\r\n      <div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { price, image } = this.$state;\r\n    const $productDetail = this.$target.querySelector('.product-bar');\r\n    const $header = this.$target.querySelector('header');\r\n    const $userSpecification = this.$target.querySelector(\r\n      '.user-specification'\r\n    );\r\n    const $status = this.$target.querySelector('.status-button');\r\n    const $imageWrapper = this.$target.querySelector('.image-wrapper');\r\n\r\n    new Header($header as Element, {\r\n      headerType: 'menu-invisible',\r\n    });\r\n\r\n    new ProductBar($productDetail as Element, {\r\n      price,\r\n    });\r\n\r\n    new ImgBox($imageWrapper as HTMLElement, {\r\n      imgType: 'gradient',\r\n      img: image,\r\n    });\r\n\r\n    new InfoSaler($userSpecification as HTMLLIElement, this.$state.users);\r\n    new Status($status as Element, {\r\n      text: '판매중',\r\n    });\r\n\r\n    const $moreBtn = $header?.querySelector('#right');\r\n    new Dropdown($moreBtn as HTMLElement, {\r\n      lists: [\r\n        {\r\n          text: '수정하기',\r\n          isWarning: false,\r\n          onclick: () => console.log('수정이벤트 발생'),\r\n        },\r\n        {\r\n          text: '삭제하기',\r\n          isWarning: true,\r\n          onclick: () => console.log('삭제이벤트 발생'),\r\n        },\r\n      ],\r\n      offset: 'right',\r\n    });\r\n\r\n    const $backBtn = $header?.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => $router.push('/home'));\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\nimport Status from './../Status/index';\r\nimport ImgBox from './../ImgBox/index';\r\n\r\ninterface PropsType {\r\n  title: string;\r\n  price: string;\r\n  image: string;\r\n}\r\n\r\nexport default class InfoProduct extends Component {\r\n  template() {\r\n    const { title, price } = this.$props as PropsType;\r\n\r\n    return `\r\n      <div class=\"product-intro\">\r\n        <div class=\"image-wrapper\"></div>\r\n        <div class=\"product-intro__detail\">\r\n          <h6 class=\"title\">${title}</h6>\r\n          <p class=\"price\">${price}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"status-button\"></div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { image } = this.$props as PropsType;\r\n    const $status = this.$target.querySelector('.status-button');\r\n    const $imageWrapper = this.$target.querySelector('.image-wrapper');\r\n\r\n    new Status($status as HTMLElement, {\r\n      text: '판매중',\r\n      readonly: true,\r\n    });\r\n\r\n    new ImgBox($imageWrapper as HTMLElement, {\r\n      imgType: 'small',\r\n      img: image,\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\n\r\nexport default class ChatBubble extends Component {\r\n  template() {\r\n    const myId = 'userA';\r\n    const { userId, message } = this.$props;\r\n\r\n    return `\r\n      <div class=\"chat-bubbles__message ${\r\n        userId === myId ? 'by-me' : 'by-partner'\r\n      }\">\r\n        <p class=\"content\">${message}</p>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\nimport IconButton from '../IconButton/index';\r\nimport TextInput from '../TextInput/index';\r\n\r\nexport default class ChatBar extends Component {\r\n  setup() {}\r\n\r\n  template() {\r\n    return `\r\n      <form class=\"chat-form\">\r\n        <div class=\"input-wrapper\"></div>\r\n        <div class=\"send-button\">send</div>\r\n      </form>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $wrapper = this.$target.querySelector('.input-wrapper');\r\n    const $sendBtn = this.$target.querySelector('.send-button');\r\n\r\n    new TextInput($wrapper as HTMLElement, {\r\n      type: 'text',\r\n      size: 'medium',\r\n      placeholder: '메시지를 입력하세요.',\r\n    });\r\n\r\n    new IconButton($sendBtn as HTMLElement, {\r\n      name: 'end-off',\r\n    });\r\n  }\r\n\r\n  setEvent() {\r\n    this.addEvent('input', 'input', () => {\r\n      const $sendBtn = this.$target.querySelector('.send-button');\r\n      const $input = this.$target.querySelector('input');\r\n\r\n      if ($input?.value) {\r\n        new IconButton($sendBtn as HTMLElement, {\r\n          name: 'end-on',\r\n        });\r\n        return;\r\n      }\r\n\r\n      new IconButton($sendBtn as HTMLElement, {\r\n        name: 'end-off',\r\n      });\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\nimport TextInput from './../TextInput/index';\r\n\r\nexport default class InputPopup extends Component {\r\n  template() {\r\n    const { message, btnText, isAlert } = this.$props;\r\n    return `\r\n      <div class=\"input-popup\">\r\n        <h6 class=\"sub-title\">${message}</h6>\r\n        <div class=\"input-wrapper ${isAlert ? 'hidden' : ''}\"></div>\r\n        <div class=\"buttons-area\">\r\n          <div class=\"close-btn\">취소</div>\r\n          <div class=\"confirm-btn ${isAlert ? 'alert' : ''}\">${btnText}</div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { isAlert } = this.$props;\r\n\r\n    if (!isAlert) {\r\n      const $wrapper = this.$target.querySelector('.input-wrapper');\r\n      new TextInput($wrapper as HTMLElement, {\r\n        placeholder: '시·구 제외, 동만 입력',\r\n        type: 'text',\r\n        size: 'medium',\r\n      });\r\n    }\r\n  }\r\n\r\n  setEvent() {\r\n    const { isAlert } = this.$props;\r\n    const $modal = this.$target;\r\n    this.addEvent('click', '.close-btn', turnOffModal);\r\n\r\n    function turnOffModal() {\r\n      $modal.classList.remove('modal-open');\r\n    }\r\n\r\n    if (!isAlert) {\r\n      this.addEvent('input', 'input', () => {\r\n        const $confirmBtn = this.$target.querySelector('.confirm-btn');\r\n        const $input = this.$target.querySelector('input');\r\n\r\n        if ($input?.value) {\r\n          $confirmBtn?.classList.add('on');\r\n          return;\r\n        }\r\n\r\n        $confirmBtn?.classList.remove('on');\r\n      });\r\n    }\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport Header from '../Shared/Header';\r\nimport InfoProduct from '../Shared/InfoProduct';\r\nimport ChatBubble from '../Shared/ChatBubble';\r\nimport ChatBar from '../Shared/ChatBar/index';\r\nimport { $router } from '../../lib/router';\r\nimport InputPopup from './../Shared/InputPopup/indext';\r\n\r\ninterface ChatBubbleType {\r\n  userId: string;\r\n  message: string;\r\n  checked: boolean;\r\n  roomId: number;\r\n}\r\n\r\n// UI 확인용 임시 더미데이터\r\nconst dummyChatBubblesData: ChatBubbleType[] = [\r\n  {\r\n    userId: 'userE',\r\n    message: '안녕하세요! 궁금한게 있는데요',\r\n    checked: true,\r\n    roomId: 1,\r\n  },\r\n  { userId: 'userA', message: '네 안녕하세요!', checked: true, roomId: 1 },\r\n  { userId: 'userE', message: '혹시', checked: true, roomId: 1 },\r\n  {\r\n    userId: 'userE',\r\n    message: '실제로 신어볼 수 있는건가요??',\r\n    checked: false,\r\n    roomId: 1,\r\n  },\r\n];\r\n\r\nexport default class ChatDetail extends Component {\r\n  setup() {\r\n    // UI 확인용 임시 더미데이터\r\n    this.$state = {\r\n      title: '우아한 옷 팔아요',\r\n      image:\r\n        'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n      price: '169,000원',\r\n    };\r\n  }\r\n\r\n  template() {\r\n    return `\r\n      <div class=\"chat-root\">\r\n        <header></header>\r\n        <div class=\"product-info\"></div>\r\n        <div class=\"chat-bubbles\"></div>\r\n        <div class=\"chatbar\"></div>\r\n        <div class=\"chat-modal\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    const $chatBubbles = this.$target.querySelector('.chat-bubbles');\r\n    const $chatbar = this.$target.querySelector('.chatbar');\r\n    const $productInfo = this.$target.querySelector('.product-info');\r\n    const $modal = this.$target.querySelector('.chat-modal');\r\n    new Header($header as HTMLElement, {\r\n      headerType: 'menu-white',\r\n      extraIconName: 'logout',\r\n      title: 'UserE',\r\n    });\r\n\r\n    new ChatBar($chatbar as HTMLElement);\r\n\r\n    new InfoProduct($productInfo as HTMLLIElement, this.$state);\r\n\r\n    new InputPopup($modal as HTMLElement, {\r\n      message: '정말로 이 채팅방을 나가시겠습니까?',\r\n      btnText: '나기기',\r\n      isAlert: true,\r\n    });\r\n\r\n    dummyChatBubblesData.forEach((chat: ChatBubbleType) => {\r\n      const $chatItem = document.createElement('div');\r\n      $chatBubbles?.append($chatItem);\r\n      new ChatBubble($chatItem as HTMLElement, chat);\r\n    });\r\n\r\n    const $backBtn = $header?.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => $router.push('/chat'));\r\n\r\n    const $rightBtn = this.$target.querySelector('#right');\r\n    $rightBtn?.addEventListener('click', () => {\r\n      console.log('asdf');\r\n      ($modal as HTMLElement).classList.add('modal-open');\r\n    });\r\n  }\r\n}\r\n","import Component from '../../../core/Component';\r\nimport IconButton from '../IconButton';\r\nimport ImgBox from '../ImgBox';\r\nimport './styles.scss';\r\n\r\ntype ButtonType = 'add' | 'delete';\r\ninterface ImgButtonProps {\r\n  btnType: ButtonType;\r\n  img?: string;\r\n  imgNum?: number;\r\n  addImg?: EventHandlerNonNull;\r\n}\r\n\r\nexport default class ImgButton extends Component {\r\n  template() {\r\n    return `\r\n    <div class=\"img-btn\"></div>`;\r\n  }\r\n\r\n  mounted() {\r\n    const { btnType, imgNum, addImg, img }: ImgButtonProps = this.$props;\r\n\r\n    const $button = this.$target.querySelector('.img-btn');\r\n    new ImgBox($button as Element, {\r\n      imgType: 'medium',\r\n      img: img,\r\n    });\r\n    const $imgBox = this.$target.querySelector('.imgbox-medium');\r\n\r\n    if (btnType === 'add') {\r\n      // 사진 추가\r\n      const $fileInput = document.createElement('input');\r\n      $fileInput.type = 'file';\r\n      $fileInput.className = 'file-input';\r\n      $fileInput.onchange = addImg as\r\n        | ((this: GlobalEventHandlers, ev: Event) => any)\r\n        | null;\r\n      $button?.append($fileInput);\r\n\r\n      new IconButton($imgBox as Element, {\r\n        name: 'image',\r\n      });\r\n      const cnt = document.createElement('div');\r\n      cnt.innerHTML = `<div><span class=${imgNum !== 0 ? 'img-num' : ''}>${\r\n        imgNum || 0\r\n      }</span>/10</div>`;\r\n      $imgBox?.append(cnt);\r\n    } else {\r\n      const $delBtn = document.createElement('div');\r\n      $delBtn.className = 'del-btn';\r\n      new IconButton($delBtn as Element, {\r\n        name: 'close-white',\r\n      });\r\n      $button?.append($delBtn);\r\n    }\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../../core/Component';\r\nimport IconButton from './../IconButton/index';\r\n\r\ninterface PropsType {\r\n  type: string;\r\n  text?: string;\r\n}\r\n\r\nexport default class LocationButton extends Component {\r\n  template() {\r\n    const { type, text }: PropsType = this.$props;\r\n\r\n    return `\r\n      <div class=\"location-button ${type}\">\r\n        <small class=\"text\">${text}</small>\r\n        <div class=\"image-wrapper\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const { type } = this.$props;\r\n    const $wrapper = this.$target.querySelector('.image-wrapper');\r\n\r\n    switch (type) {\r\n      case 'active':\r\n        new IconButton($wrapper as HTMLElement, {\r\n          name: 'close-mint',\r\n        });\r\n        break;\r\n\r\n      case 'add':\r\n        new IconButton($wrapper as HTMLElement, {\r\n          name: 'add-mint',\r\n        });\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  setEvent() {\r\n    const $location = this.$target.parentElement?.parentElement;\r\n\r\n    this.addEvent('click', '.add', () => handleClickOnAddBtn());\r\n\r\n    function handleClickOnAddBtn() {\r\n      const $modal = $location?.querySelector('.location-modal');\r\n      $modal?.classList.add('modal-open');\r\n    }\r\n  }\r\n}\r\n","import './scss/index.scss';\r\nimport { initRouter } from './lib/router';\r\nimport Home from './Components/Home';\r\nimport SalesProductDetail from './Components/SalesProductDetail';\r\nimport Chatlist from './Components/ChatList/index';\r\nimport ChatDetail from './Components/ChatDetail';\r\nimport NewPost from './Components/NewPost';\r\nimport Register from './Components/Auth/Register';\r\nimport Logout from './Components/Auth/Logout';\r\nimport Location from './Components/Location';\r\n\r\nconst $app = document.querySelector('#app');\r\nconst routes = [\r\n  { path: '/', redirect: '/home' },\r\n  { path: '/home', component: Home },\r\n  { path: '/post', component: SalesProductDetail },\r\n  { path: '/post/:id', component: SalesProductDetail },\r\n  { path: '/post/new', component: NewPost },\r\n  { path: '/chat', component: Chatlist },\r\n  { path: '/chat/:id', component: ChatDetail },\r\n  { path: '/register', component: Register },\r\n  { path: '/logout', component: Logout },\r\n  { path: '/location', component: Location },\r\n  // { path: '/login', component: LoginPage },\r\n  // { path: '/stores', component: StorePage },\r\n];\r\n\r\nasync function init() {\r\n  initRouter({ $app, routes });\r\n}\r\ninit();\r\n","import Header from '../Shared/Header';\r\nimport Component from '../../core/Component';\r\nimport './styles.scss';\r\nimport ImgButton from '../Shared/ImgButton';\r\nimport IconButton from '../Shared/IconButton';\r\n\r\nexport default class Home extends Component {\r\n  setup() {\r\n    this.$state = {\r\n      title: null,\r\n      price: null,\r\n      content: null,\r\n      files: [],\r\n      imgs: [],\r\n    };\r\n  }\r\n\r\n  template() {\r\n    const line = `\r\n    <div style=\"padding: 0 1.6rem; box-sizing: border-box;\">\r\n        <div class=\"line\"></div>\r\n    </div>`;\r\n\r\n    return `\r\n    <header></header>\r\n    <div class=\"new-post-wrapper\">\r\n        <div class=\"img-list\"></div>\r\n        ${line}\r\n        <div class=\"post-container\">\r\n            <input id=\"title\" placeholder=\"글 제목\" />\r\n            ${line}\r\n            <input id=\"price\" placeholder=\"₩ 가격(선택사항)\"/>\r\n            ${line}\r\n            <textarea id=\"content\" rows=8 placeholder=\"게시글 내용을 작성해주세요.\"></textarea>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"loc-footer\">\r\n        <div id=\"loc\" style=\"width: 1.6rem; height: 1.6rem; overflow: hidden; margin-right: 0.4rem;\"></div>\r\n        <div>역삼동</div>\r\n    </div>\r\n    `;\r\n  }\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    new Header($header as Element, {\r\n      title: '글쓰기',\r\n      headerType: 'menu-white',\r\n      extraIconName: 'check-disable',\r\n    });\r\n\r\n    const $loc = this.$target.querySelector('#loc');\r\n    new IconButton($loc as Element, {\r\n      name: 'pinmap',\r\n    });\r\n\r\n    // 사진 선택\r\n    const selectImg = (e: any) => {\r\n      const reader = new FileReader();\r\n      const targetFile = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          files: [...this.$state.files, targetFile],\r\n          imgs: [...this.$state.imgs, reader.result],\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(targetFile);\r\n    };\r\n\r\n    const $imgList = this.$target.querySelector('.img-list');\r\n    new ImgButton($imgList as Element, {\r\n      btnType: 'add',\r\n      imgNum: this.$state.imgs.length,\r\n      addImg: selectImg,\r\n    });\r\n\r\n    this.$state.imgs.forEach((url: string, idx: number) => {\r\n      const $img = document.createElement('div');\r\n      $img.id = `img-del-${idx}`;\r\n      $img.className = 'img-del';\r\n      new ImgButton($img as Element, {\r\n        btnType: 'delete',\r\n        img: url,\r\n      });\r\n      $imgList?.append($img);\r\n    });\r\n\r\n    const $backBtn = $header?.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => history.back());\r\n  }\r\n\r\n  setEvent() {\r\n    this.$target.addEventListener('input', (e) => {\r\n      //   if (e.target.id === 'title') {\r\n      //     this.setState({ title: e.target.value });\r\n      //   } else if (e.target.id === 'price') {\r\n      //     this.setState({ price: e.target.value });\r\n      //   } else {\r\n      //     this.setState({ content: e.target.value });\r\n      //   }\r\n      const $title = (this.$target.querySelector('#title') as HTMLInputElement)\r\n        .value;\r\n      const $content = (\r\n        this.$target.querySelector('#content') as HTMLInputElement\r\n      ).value;\r\n\r\n      const $checkIcon = this.$target.querySelector('.header__right-icon');\r\n      if ($title && $content) {\r\n        new IconButton($checkIcon as Element, {\r\n          name: 'check-active',\r\n        });\r\n      } else {\r\n        new IconButton($checkIcon as Element, {\r\n          name: 'check-disable',\r\n        });\r\n      }\r\n    });\r\n\r\n    this.addEvent('click', '.del-btn', ({ target }: { target: Element }) => {\r\n      const idx = (\r\n        target.parentNode?.parentNode?.parentNode as Element\r\n      ).id.split('img-del-')[1];\r\n\r\n      this.setState({\r\n        files: this.$state.files.filter(\r\n          (_: File, i: number) => Number(idx) !== i\r\n        ),\r\n        imgs: this.$state.imgs.filter(\r\n          (_: string, i: number) => Number(idx) !== i\r\n        ),\r\n      });\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport ChatListItem from '../Shared/ChatListItem';\r\nimport Header from '../Shared/Header';\r\nimport { $router } from '../../lib/router';\r\n\r\ninterface ChatType {\r\n  username: string;\r\n  timestamp: string;\r\n  content: string;\r\n  img: string;\r\n  checked?: boolean;\r\n}\r\n\r\nexport default class Chatlist extends Component {\r\n  setup() {\r\n    this.$state = [\r\n      {\r\n        username: 'UserE',\r\n        timestamp: '1분 전',\r\n        content: '실제로 신어볼 수 있는 건가요?',\r\n        img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n        checked: true,\r\n      },\r\n      {\r\n        username: 'UserD',\r\n        timestamp: '1시간 전',\r\n        content: '감사합니다 :)',\r\n        img: 'https://flexible.img.hani.co.kr/flexible/normal/700/1040/imgdb/original/2021/0428/20210428504000.jpg',\r\n        checked: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  template() {\r\n    return `\r\n      <header></header>\r\n      <div class=\"chat-lists\"></div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    const $chatList = this.$target.querySelector('.chat-lists');\r\n    const chatData = this.$state;\r\n\r\n    new Header($header as HTMLElement, {\r\n      headerType: 'menu-off-white',\r\n      title: '채팅하기',\r\n    });\r\n\r\n    chatData.forEach((chat: ChatType) => {\r\n      const $list = document.createElement('div');\r\n      $chatList?.append($list);\r\n      new ChatListItem($list as Element, chat);\r\n    });\r\n\r\n    const $backBtn = $header?.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => $router.push('/post'));\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport TextInput from './../Shared/TextInput/index';\r\nimport Button from './../Shared/Button/index';\r\nimport Header from './../Shared/Header/index';\r\nimport { $router } from '../../lib/router';\r\n\r\nexport default class Register extends Component {\r\n  template() {\r\n    return `\r\n      <header></header>\r\n      <form class=\"authentication\">\r\n        <label for=\"userId\">아이디\r\n          <div class=\"user-email\"></div>\r\n        </label>\r\n\r\n        <label for=\"userLoc\">우리 동네\r\n          <div class=\"user-location\"></div>     \r\n        </label>\r\n\r\n        <div class=\"register-btn\"></div>\r\n      </form>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    const $userEmail = this.$target.querySelector('.user-email');\r\n    const $userLocation = this.$target.querySelector('.user-location');\r\n    const $registerBtn = this.$target.querySelector('.register-btn');\r\n\r\n    new Header($header as HTMLElement, {\r\n      title: '회원가입',\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    new TextInput($userEmail as HTMLElement, {\r\n      type: 'email',\r\n      placeholder: '영문, 숫자 조합 20자 이하',\r\n      size: 'large',\r\n      id: 'userId',\r\n    });\r\n\r\n    new TextInput($userLocation as HTMLElement, {\r\n      type: 'text',\r\n      placeholder: '시·구 제외, 동만 입력',\r\n      size: 'large',\r\n      id: 'userLoc',\r\n    });\r\n\r\n    new Button($registerBtn as HTMLElement, {\r\n      buttonType: 'large',\r\n      title: '회원가입',\r\n      handleClick: () => console.log('회원가입 폼 제출!'),\r\n    });\r\n\r\n    const $button = $registerBtn?.querySelector('#button') as HTMLButtonElement;\r\n    $button.disabled = true;\r\n\r\n    this.$target.addEventListener('input', (e: HTMLInputElement) => {\r\n      const $inputs = this.$target.querySelectorAll('input');\r\n      const isActivated = [...$inputs].every((input) => input.value);\r\n\r\n      if (isActivated) {\r\n        $button.disabled = false;\r\n      } else {\r\n        $button.disabled = true;\r\n      }\r\n    });\r\n\r\n    const $backBtn = this.$target.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => {\r\n      $router.push('/home');\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport Header from './../Shared/Header/index';\r\nimport Button from './../Shared/Button/index';\r\nimport { $router } from '../../lib/router';\r\n\r\nexport default class Logout extends Component {\r\n  setup() {\r\n    this.$state = {\r\n      username: '우아해지고 싶은 사람',\r\n    };\r\n  }\r\n  template() {\r\n    return `\r\n      <header></header>\r\n      <form class=\"authentication\">\r\n        <div class=\"user-nickname\">${this.$state.username}</div>\r\n        <div class=\"logout-btn\"></div>\r\n      </form>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    const $logoutBtn = this.$target.querySelector('.logout-btn');\r\n\r\n    new Header($header as HTMLElement, {\r\n      title: '내 계정',\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    new Button($logoutBtn as HTMLElement, {\r\n      buttonType: 'large',\r\n      title: '로그아웃',\r\n      handleClick: () => console.log('로그아웃 폼 제출!'),\r\n    });\r\n\r\n    const $backBtn = this.$target.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => {\r\n      $router.push('/home');\r\n    });\r\n  }\r\n}\r\n","import './styles';\r\nimport Component from '../../core/Component';\r\nimport Header from './../Shared/Header/index';\r\nimport { $router } from '../../lib/router';\r\nimport LocationButton from './../Shared/LocationButton/index';\r\nimport InputPopup from './../Shared/InputPopup/indext';\r\n\r\ninterface PropsType {\r\n  type: string;\r\n  text?: string;\r\n}\r\n\r\nexport default class Location extends Component {\r\n  setup() {\r\n    // 임시 유저 위치 정보\r\n    this.$state = [\r\n      {\r\n        type: 'active',\r\n        text: '역삼동',\r\n      },\r\n      // {\r\n      //   type: 'inactive',\r\n      //   text: '양재동',\r\n      // },\r\n    ];\r\n  }\r\n\r\n  template() {\r\n    return `\r\n      <header></header>\r\n      <div id=\"location\">\r\n        <div class=\"guide-message\">\r\n          <p>지역은 최소 1개 이상</p>\r\n          <p>최대 2개까지 설정 가능해요.</p>\r\n        </div>\r\n        <div class=\"button-area\"></div>\r\n        <div class=\"location-modal\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  mounted() {\r\n    const $header = this.$target.querySelector('header');\r\n    new Header($header as HTMLElement, {\r\n      title: '내 동네 설정하기',\r\n      headerType: 'menu-off-white',\r\n    });\r\n\r\n    const $buttonArea = this.$target.querySelector('.button-area');\r\n    const locations = this.$state.slice(0, 2);\r\n\r\n    if (locations.length === 1) {\r\n      const $location = document.createElement('div');\r\n      $buttonArea?.append($location);\r\n      new LocationButton($location as HTMLElement, locations[0]);\r\n\r\n      const $addLocation = document.createElement('div');\r\n      $buttonArea?.append($addLocation);\r\n      new LocationButton($addLocation as HTMLElement, {\r\n        type: 'add',\r\n      });\r\n    } else {\r\n      locations.forEach((loc: PropsType) => {\r\n        const $location = document.createElement('div');\r\n        $buttonArea?.append($location);\r\n        new LocationButton($location as HTMLElement, loc);\r\n      });\r\n    }\r\n\r\n    const $modal = this.$target.querySelector('.location-modal');\r\n    new InputPopup($modal as HTMLElement, {\r\n      message: '우리 동네를 입력하세요.',\r\n      btnText: '확인',\r\n      isAlert: false,\r\n    });\r\n\r\n    const $backBtn = $header?.querySelector('#left');\r\n    $backBtn?.addEventListener('click', () => $router.push('/home'));\r\n  }\r\n}\r\n"],"sourceRoot":""}